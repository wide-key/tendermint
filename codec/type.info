======= types.DuplicateVoteEvidence 'github.com/tendermint/tendermint/types' 'DuplicateVoteEvidence' == 
struct {
    PubKey : ('github.com/tendermint/tendermint/crypto' 'PubKey') interface (github.com/tendermint/tendermint/crypto PubKey)!
    VoteA : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Vote') {
        struct {
            Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
            Height : ('' 'int64') int64
            Round : ('' 'int') int
            BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                    Total : ('' 'int') int
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                } //struct
            } //struct
            Timestamp : ('time' 'Time') 
            ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            ValidatorIndex : ('' 'int') int
            Signature : ('' '') ByteSlice
        } //struct
    } // pointer
    VoteB : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Vote') {
        struct {
            Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
            Height : ('' 'int64') int64
            Round : ('' 'int') int
            BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                    Total : ('' 'int') int
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                } //struct
            } //struct
            Timestamp : ('time' 'Time') 
            ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            ValidatorIndex : ('' 'int') int
            Signature : ('' '') ByteSlice
        } //struct
    } // pointer
} //struct
======= ed25519.PrivKeyEd25519 'github.com/tendermint/tendermint/crypto/ed25519' 'PrivKeyEd25519' == 
array {
    uint8
} //array
======= secp256k1.PrivKeySecp256k1 'github.com/tendermint/tendermint/crypto/secp256k1' 'PrivKeySecp256k1' == 
array {
    uint8
} //array
======= ed25519.PubKeyEd25519 'github.com/tendermint/tendermint/crypto/ed25519' 'PubKeyEd25519' == 
array {
    uint8
} //array
======= secp256k1.PubKeySecp256k1 'github.com/tendermint/tendermint/crypto/secp256k1' 'PubKeySecp256k1' == 
array {
    uint8
} //array
======= multisig.PubKeyMultisigThreshold 'github.com/tendermint/tendermint/crypto/multisig' 'PubKeyMultisigThreshold' == 
struct {
    K : ('' 'uint') uint
    PubKeys : ('' '') slice {
        interface (github.com/tendermint/tendermint/crypto PubKey)!
    } //slice
} //struct
======= types.Vote 'github.com/tendermint/tendermint/types' 'Vote' == 
struct {
    Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
            Total : ('' 'int') int
            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        } //struct
    } //struct
    Timestamp : ('time' 'Time') 
    ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
    ValidatorIndex : ('' 'int') int
    Signature : ('' '') ByteSlice
} //struct
======= consensus.NewRoundStepMessage 'github.com/tendermint/tendermint/consensus' 'NewRoundStepMessage' == 
struct {
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    Step : ('github.com/tendermint/tendermint/consensus/types' 'RoundStepType') uint8
    SecondsSinceStartTime : ('' 'int') int
    LastCommitRound : ('' 'int') int
} //struct
======= consensus.NewValidBlockMessage 'github.com/tendermint/tendermint/consensus' 'NewValidBlockMessage' == 
struct {
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    BlockPartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
        Total : ('' 'int') int
        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
    } //struct
    BlockParts : ('' '') pointer ('github.com/tendermint/tendermint/libs/common' 'BitArray') {
        struct_with_private {
            mtx : ('sync' 'Mutex') struct_with_private {
                state : ('' 'int32') int32
                sema : ('' 'uint32') uint32
            } //struct
            Bits : ('' 'int') int
            Elems : ('' '') slice {
                uint64
            } //slice
        } //struct
    } // pointer
    IsCommit : ('' 'bool') bool
} //struct
======= consensus.ProposalMessage 'github.com/tendermint/tendermint/consensus' 'ProposalMessage' == 
struct {
    Proposal : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Proposal') {
        struct {
            Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
            Height : ('' 'int64') int64
            Round : ('' 'int') int
            POLRound : ('' 'int') int
            BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                    Total : ('' 'int') int
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                } //struct
            } //struct
            Timestamp : ('time' 'Time') 
            Signature : ('' '') ByteSlice
        } //struct
    } // pointer
} //struct
======= consensus.ProposalPOLMessage 'github.com/tendermint/tendermint/consensus' 'ProposalPOLMessage' == 
struct {
    Height : ('' 'int64') int64
    ProposalPOLRound : ('' 'int') int
    ProposalPOL : ('' '') pointer ('github.com/tendermint/tendermint/libs/common' 'BitArray') {
        struct_with_private {
            mtx : ('sync' 'Mutex') struct_with_private {
                state : ('' 'int32') int32
                sema : ('' 'uint32') uint32
            } //struct
            Bits : ('' 'int') int
            Elems : ('' '') slice {
                uint64
            } //slice
        } //struct
    } // pointer
} //struct
======= consensus.BlockPartMessage 'github.com/tendermint/tendermint/consensus' 'BlockPartMessage' == 
struct {
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    Part : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Part') {
        struct {
            Index : ('' 'int') int
            Bytes : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            Proof : ('github.com/tendermint/tendermint/crypto/merkle' 'SimpleProof') struct {
                Total : ('' 'int') int
                Index : ('' 'int') int
                LeafHash : ('' '') ByteSlice
                Aunts : ('' '') slice {
                    ByteSlice
                } //slice
            } //struct
        } //struct
    } // pointer
} //struct
======= consensus.VoteMessage 'github.com/tendermint/tendermint/consensus' 'VoteMessage' == 
struct {
    Vote : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Vote') {
        struct {
            Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
            Height : ('' 'int64') int64
            Round : ('' 'int') int
            BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                    Total : ('' 'int') int
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                } //struct
            } //struct
            Timestamp : ('time' 'Time') 
            ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            ValidatorIndex : ('' 'int') int
            Signature : ('' '') ByteSlice
        } //struct
    } // pointer
} //struct
======= consensus.HasVoteMessage 'github.com/tendermint/tendermint/consensus' 'HasVoteMessage' == 
struct {
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
    Index : ('' 'int') int
} //struct
======= consensus.VoteSetMaj23Message 'github.com/tendermint/tendermint/consensus' 'VoteSetMaj23Message' == 
struct {
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
    BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
            Total : ('' 'int') int
            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        } //struct
    } //struct
} //struct
======= consensus.VoteSetBitsMessage 'github.com/tendermint/tendermint/consensus' 'VoteSetBitsMessage' == 
struct {
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
    BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
            Total : ('' 'int') int
            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        } //struct
    } //struct
    Votes : ('' '') pointer ('github.com/tendermint/tendermint/libs/common' 'BitArray') {
        struct_with_private {
            mtx : ('sync' 'Mutex') struct_with_private {
                state : ('' 'int32') int32
                sema : ('' 'uint32') uint32
            } //struct
            Bits : ('' 'int') int
            Elems : ('' '') slice {
                uint64
            } //slice
        } //struct
    } // pointer
} //struct
======= types.EventDataRoundState 'github.com/tendermint/tendermint/types' 'EventDataRoundState' == 
struct {
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    Step : ('' 'string') string
} //struct
======= consensus.EndHeightMessage 'github.com/tendermint/tendermint/consensus' 'EndHeightMessage' == 
struct {
    Height : ('' 'int64') int64
} //struct
======= types.EventDataNewBlock 'github.com/tendermint/tendermint/types' 'EventDataNewBlock' == 
struct {
    Block : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Block') {
        struct_with_private {
            mtx : ('sync' 'Mutex') struct_with_private {
                state : ('' 'int32') int32
                sema : ('' 'uint32') uint32
            } //struct
            Header : ('github.com/tendermint/tendermint/types' 'Header') struct {
                Version : ('github.com/tendermint/tendermint/version' 'Consensus') struct {
                    Block : ('github.com/tendermint/tendermint/version' 'Protocol') uint64
                    App : ('github.com/tendermint/tendermint/version' 'Protocol') uint64
                } //struct
                ChainID : ('' 'string') string
                Height : ('' 'int64') int64
                Time : ('time' 'Time') 
                NumTxs : ('' 'int64') int64
                TotalTxs : ('' 'int64') int64
                LastBlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                    PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                        Total : ('' 'int') int
                        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                    } //struct
                } //struct
                LastCommitHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                DataHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                ValidatorsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                NextValidatorsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                ConsensusHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                AppHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                LastResultsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                EvidenceHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                ProposerAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            } //struct
            Data : ('github.com/tendermint/tendermint/types' 'Data') struct_with_private {
                Txs : ('github.com/tendermint/tendermint/types' 'Txs') slice {
                    ByteSlice
                } //slice
                hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            } //struct
            Evidence : ('github.com/tendermint/tendermint/types' 'EvidenceData') struct_with_private {
                Evidence : ('github.com/tendermint/tendermint/types' 'EvidenceList') slice {
                    interface (github.com/tendermint/tendermint/types Evidence)!
                } //slice
                hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            } //struct
            LastCommit : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Commit') {
                struct_with_private {
                    BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                        PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                            Total : ('' 'int') int
                            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                        } //struct
                    } //struct
                    Precommits : ('' '') slice {
                        pointer ('github.com/tendermint/tendermint/types' 'CommitSig') {
                            struct {
                                Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
                                Height : ('' 'int64') int64
                                Round : ('' 'int') int
                                BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                                    PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                                        Total : ('' 'int') int
                                        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                                    } //struct
                                } //struct
                                Timestamp : ('time' 'Time') 
                                ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                                ValidatorIndex : ('' 'int') int
                                Signature : ('' '') ByteSlice
                            } //struct
                        } // pointer
                    } //slice
                    height : ('' 'int64') int64
                    round : ('' 'int') int
                    hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                    bitArray : ('' '') pointer ('github.com/tendermint/tendermint/libs/common' 'BitArray') {
                        struct_with_private {
                            mtx : ('sync' 'Mutex') struct_with_private {
                                state : ('' 'int32') int32
                                sema : ('' 'uint32') uint32
                            } //struct
                            Bits : ('' 'int') int
                            Elems : ('' '') slice {
                                uint64
                            } //slice
                        } //struct
                    } // pointer
                } //struct
            } // pointer
        } //struct
    } // pointer
    ResultBeginBlock : ('github.com/tendermint/tendermint/abci/types' 'ResponseBeginBlock') struct {
        Events : ('' '') slice {
            struct {
                Type : ('' 'string') string
                Attributes : ('' '') slice {
                    struct {
                        Key : ('' '') ByteSlice
                        Value : ('' '') ByteSlice
                        XXX_NoUnkeyedLiteral : ('' '') struct {
                        } //struct
                        XXX_unrecognized : ('' '') ByteSlice
                        XXX_sizecache : ('' 'int32') int32
                    } //struct
                } //slice
                XXX_NoUnkeyedLiteral : ('' '') struct {
                } //struct
                XXX_unrecognized : ('' '') ByteSlice
                XXX_sizecache : ('' 'int32') int32
            } //struct
        } //slice
        XXX_NoUnkeyedLiteral : ('' '') struct {
        } //struct
        XXX_unrecognized : ('' '') ByteSlice
        XXX_sizecache : ('' 'int32') int32
    } //struct
    ResultEndBlock : ('github.com/tendermint/tendermint/abci/types' 'ResponseEndBlock') struct {
        ValidatorUpdates : ('' '') slice {
            struct {
                PubKey : ('github.com/tendermint/tendermint/abci/types' 'PubKey') struct {
                    Type : ('' 'string') string
                    Data : ('' '') ByteSlice
                    XXX_NoUnkeyedLiteral : ('' '') struct {
                    } //struct
                    XXX_unrecognized : ('' '') ByteSlice
                    XXX_sizecache : ('' 'int32') int32
                } //struct
                Power : ('' 'int64') int64
                XXX_NoUnkeyedLiteral : ('' '') struct {
                } //struct
                XXX_unrecognized : ('' '') ByteSlice
                XXX_sizecache : ('' 'int32') int32
            } //struct
        } //slice
        ConsensusParamUpdates : ('' '') pointer ('github.com/tendermint/tendermint/abci/types' 'ConsensusParams') {
            struct {
                Block : ('' '') pointer ('github.com/tendermint/tendermint/abci/types' 'BlockParams') {
                    struct {
                        MaxBytes : ('' 'int64') int64
                        MaxGas : ('' 'int64') int64
                        XXX_NoUnkeyedLiteral : ('' '') struct {
                        } //struct
                        XXX_unrecognized : ('' '') ByteSlice
                        XXX_sizecache : ('' 'int32') int32
                    } //struct
                } // pointer
                Evidence : ('' '') pointer ('github.com/tendermint/tendermint/abci/types' 'EvidenceParams') {
                    struct {
                        MaxAge : ('' 'int64') int64
                        XXX_NoUnkeyedLiteral : ('' '') struct {
                        } //struct
                        XXX_unrecognized : ('' '') ByteSlice
                        XXX_sizecache : ('' 'int32') int32
                    } //struct
                } // pointer
                Validator : ('' '') pointer ('github.com/tendermint/tendermint/abci/types' 'ValidatorParams') {
                    struct {
                        PubKeyTypes : ('' '') slice {
                            string
                        } //slice
                        XXX_NoUnkeyedLiteral : ('' '') struct {
                        } //struct
                        XXX_unrecognized : ('' '') ByteSlice
                        XXX_sizecache : ('' 'int32') int32
                    } //struct
                } // pointer
                XXX_NoUnkeyedLiteral : ('' '') struct {
                } //struct
                XXX_unrecognized : ('' '') ByteSlice
                XXX_sizecache : ('' 'int32') int32
            } //struct
        } // pointer
        Events : ('' '') slice {
            struct {
                Type : ('' 'string') string
                Attributes : ('' '') slice {
                    struct {
                        Key : ('' '') ByteSlice
                        Value : ('' '') ByteSlice
                        XXX_NoUnkeyedLiteral : ('' '') struct {
                        } //struct
                        XXX_unrecognized : ('' '') ByteSlice
                        XXX_sizecache : ('' 'int32') int32
                    } //struct
                } //slice
                XXX_NoUnkeyedLiteral : ('' '') struct {
                } //struct
                XXX_unrecognized : ('' '') ByteSlice
                XXX_sizecache : ('' 'int32') int32
            } //struct
        } //slice
        XXX_NoUnkeyedLiteral : ('' '') struct {
        } //struct
        XXX_unrecognized : ('' '') ByteSlice
        XXX_sizecache : ('' 'int32') int32
    } //struct
} //struct
======= types.EventDataNewBlockHeader 'github.com/tendermint/tendermint/types' 'EventDataNewBlockHeader' == 
struct {
    Header : ('github.com/tendermint/tendermint/types' 'Header') struct {
        Version : ('github.com/tendermint/tendermint/version' 'Consensus') struct {
            Block : ('github.com/tendermint/tendermint/version' 'Protocol') uint64
            App : ('github.com/tendermint/tendermint/version' 'Protocol') uint64
        } //struct
        ChainID : ('' 'string') string
        Height : ('' 'int64') int64
        Time : ('time' 'Time') 
        NumTxs : ('' 'int64') int64
        TotalTxs : ('' 'int64') int64
        LastBlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                Total : ('' 'int') int
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            } //struct
        } //struct
        LastCommitHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        DataHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        ValidatorsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        NextValidatorsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        ConsensusHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        AppHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        LastResultsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        EvidenceHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        ProposerAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
    } //struct
    ResultBeginBlock : ('github.com/tendermint/tendermint/abci/types' 'ResponseBeginBlock') struct {
        Events : ('' '') slice {
            struct {
                Type : ('' 'string') string
                Attributes : ('' '') slice {
                    struct {
                        Key : ('' '') ByteSlice
                        Value : ('' '') ByteSlice
                        XXX_NoUnkeyedLiteral : ('' '') struct {
                        } //struct
                        XXX_unrecognized : ('' '') ByteSlice
                        XXX_sizecache : ('' 'int32') int32
                    } //struct
                } //slice
                XXX_NoUnkeyedLiteral : ('' '') struct {
                } //struct
                XXX_unrecognized : ('' '') ByteSlice
                XXX_sizecache : ('' 'int32') int32
            } //struct
        } //slice
        XXX_NoUnkeyedLiteral : ('' '') struct {
        } //struct
        XXX_unrecognized : ('' '') ByteSlice
        XXX_sizecache : ('' 'int32') int32
    } //struct
    ResultEndBlock : ('github.com/tendermint/tendermint/abci/types' 'ResponseEndBlock') struct {
        ValidatorUpdates : ('' '') slice {
            struct {
                PubKey : ('github.com/tendermint/tendermint/abci/types' 'PubKey') struct {
                    Type : ('' 'string') string
                    Data : ('' '') ByteSlice
                    XXX_NoUnkeyedLiteral : ('' '') struct {
                    } //struct
                    XXX_unrecognized : ('' '') ByteSlice
                    XXX_sizecache : ('' 'int32') int32
                } //struct
                Power : ('' 'int64') int64
                XXX_NoUnkeyedLiteral : ('' '') struct {
                } //struct
                XXX_unrecognized : ('' '') ByteSlice
                XXX_sizecache : ('' 'int32') int32
            } //struct
        } //slice
        ConsensusParamUpdates : ('' '') pointer ('github.com/tendermint/tendermint/abci/types' 'ConsensusParams') {
            struct {
                Block : ('' '') pointer ('github.com/tendermint/tendermint/abci/types' 'BlockParams') {
                    struct {
                        MaxBytes : ('' 'int64') int64
                        MaxGas : ('' 'int64') int64
                        XXX_NoUnkeyedLiteral : ('' '') struct {
                        } //struct
                        XXX_unrecognized : ('' '') ByteSlice
                        XXX_sizecache : ('' 'int32') int32
                    } //struct
                } // pointer
                Evidence : ('' '') pointer ('github.com/tendermint/tendermint/abci/types' 'EvidenceParams') {
                    struct {
                        MaxAge : ('' 'int64') int64
                        XXX_NoUnkeyedLiteral : ('' '') struct {
                        } //struct
                        XXX_unrecognized : ('' '') ByteSlice
                        XXX_sizecache : ('' 'int32') int32
                    } //struct
                } // pointer
                Validator : ('' '') pointer ('github.com/tendermint/tendermint/abci/types' 'ValidatorParams') {
                    struct {
                        PubKeyTypes : ('' '') slice {
                            string
                        } //slice
                        XXX_NoUnkeyedLiteral : ('' '') struct {
                        } //struct
                        XXX_unrecognized : ('' '') ByteSlice
                        XXX_sizecache : ('' 'int32') int32
                    } //struct
                } // pointer
                XXX_NoUnkeyedLiteral : ('' '') struct {
                } //struct
                XXX_unrecognized : ('' '') ByteSlice
                XXX_sizecache : ('' 'int32') int32
            } //struct
        } // pointer
        Events : ('' '') slice {
            struct {
                Type : ('' 'string') string
                Attributes : ('' '') slice {
                    struct {
                        Key : ('' '') ByteSlice
                        Value : ('' '') ByteSlice
                        XXX_NoUnkeyedLiteral : ('' '') struct {
                        } //struct
                        XXX_unrecognized : ('' '') ByteSlice
                        XXX_sizecache : ('' 'int32') int32
                    } //struct
                } //slice
                XXX_NoUnkeyedLiteral : ('' '') struct {
                } //struct
                XXX_unrecognized : ('' '') ByteSlice
                XXX_sizecache : ('' 'int32') int32
            } //struct
        } //slice
        XXX_NoUnkeyedLiteral : ('' '') struct {
        } //struct
        XXX_unrecognized : ('' '') ByteSlice
        XXX_sizecache : ('' 'int32') int32
    } //struct
} //struct
======= types.EventDataTx 'github.com/tendermint/tendermint/types' 'EventDataTx' == 
struct {
    TxResult : ('github.com/tendermint/tendermint/types' 'TxResult') struct {
        Height : ('' 'int64') int64
        Index : ('' 'uint32') uint32
        Tx : ('github.com/tendermint/tendermint/types' 'Tx') ByteSlice
        Result : ('github.com/tendermint/tendermint/abci/types' 'ResponseDeliverTx') struct {
            Code : ('' 'uint32') uint32
            Data : ('' '') ByteSlice
            Log : ('' 'string') string
            Info : ('' 'string') string
            GasWanted : ('' 'int64') int64
            GasUsed : ('' 'int64') int64
            Events : ('' '') slice {
                struct {
                    Type : ('' 'string') string
                    Attributes : ('' '') slice {
                        struct {
                            Key : ('' '') ByteSlice
                            Value : ('' '') ByteSlice
                            XXX_NoUnkeyedLiteral : ('' '') struct {
                            } //struct
                            XXX_unrecognized : ('' '') ByteSlice
                            XXX_sizecache : ('' 'int32') int32
                        } //struct
                    } //slice
                    XXX_NoUnkeyedLiteral : ('' '') struct {
                    } //struct
                    XXX_unrecognized : ('' '') ByteSlice
                    XXX_sizecache : ('' 'int32') int32
                } //struct
            } //slice
            Codespace : ('' 'string') string
            XXX_NoUnkeyedLiteral : ('' '') struct {
            } //struct
            XXX_unrecognized : ('' '') ByteSlice
            XXX_sizecache : ('' 'int32') int32
        } //struct
    } //struct
} //struct
======= types.EventDataNewRound 'github.com/tendermint/tendermint/types' 'EventDataNewRound' == 
struct {
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    Step : ('' 'string') string
    Proposer : ('github.com/tendermint/tendermint/types' 'ValidatorInfo') struct {
        Address : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        Index : ('' 'int') int
    } //struct
} //struct
======= types.EventDataCompleteProposal 'github.com/tendermint/tendermint/types' 'EventDataCompleteProposal' == 
struct {
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    Step : ('' 'string') string
    BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
            Total : ('' 'int') int
            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        } //struct
    } //struct
} //struct
======= types.EventDataVote 'github.com/tendermint/tendermint/types' 'EventDataVote' == 
struct {
    Vote : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Vote') {
        struct {
            Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
            Height : ('' 'int64') int64
            Round : ('' 'int') int
            BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                    Total : ('' 'int') int
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                } //struct
            } //struct
            Timestamp : ('time' 'Time') 
            ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            ValidatorIndex : ('' 'int') int
            Signature : ('' '') ByteSlice
        } //struct
    } // pointer
} //struct
======= types.EventDataValidatorSetUpdates 'github.com/tendermint/tendermint/types' 'EventDataValidatorSetUpdates' == 
struct {
    ValidatorUpdates : ('' '') slice {
        pointer ('github.com/tendermint/tendermint/types' 'Validator') {
            struct {
                Address : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                PubKey : ('github.com/tendermint/tendermint/crypto' 'PubKey') interface (github.com/tendermint/tendermint/crypto PubKey)!
                VotingPower : ('' 'int64') int64
                ProposerPriority : ('' 'int64') int64
            } //struct
        } // pointer
    } //slice
} //struct
======= types.EventDataString 'github.com/tendermint/tendermint/types' 'EventDataString' == 
string
======= types.MockGoodEvidence 'github.com/tendermint/tendermint/types' 'MockGoodEvidence' == 
struct {
    Height_ : ('' 'int64') int64
    Address_ : ('' '') ByteSlice
} //struct
======= types.MockRandomGoodEvidence 'github.com/tendermint/tendermint/types' 'MockRandomGoodEvidence' == 
struct_with_private {
    MockGoodEvidence : ('github.com/tendermint/tendermint/types' 'MockGoodEvidence') struct {
        Height_ : ('' 'int64') int64
        Address_ : ('' '') ByteSlice
    } //struct
    randBytes : ('' '') ByteSlice
} //struct
======= types.MockBadEvidence 'github.com/tendermint/tendermint/types' 'MockBadEvidence' == 
struct {
    MockGoodEvidence : ('github.com/tendermint/tendermint/types' 'MockGoodEvidence') struct {
        Height_ : ('' 'int64') int64
        Address_ : ('' '') ByteSlice
    } //struct
} //struct
======= evidence.EvidenceListMessage 'github.com/tendermint/tendermint/evidence' 'EvidenceListMessage' == 
struct {
    Evidence : ('' '') slice {
        interface (github.com/tendermint/tendermint/types Evidence)!
    } //slice
} //struct
======= privval.PubKeyRequest 'github.com/tendermint/tendermint/privval' 'PubKeyRequest' == 
struct {
} //struct
======= privval.PubKeyResponse 'github.com/tendermint/tendermint/privval' 'PubKeyResponse' == 
struct {
    PubKey : ('github.com/tendermint/tendermint/crypto' 'PubKey') interface (github.com/tendermint/tendermint/crypto PubKey)!
    Error : ('' '') pointer ('github.com/tendermint/tendermint/privval' 'RemoteSignerError') {
        struct {
            Code : ('' 'int') int
            Description : ('' 'string') string
        } //struct
    } // pointer
} //struct
======= privval.SignVoteRequest 'github.com/tendermint/tendermint/privval' 'SignVoteRequest' == 
struct {
    Vote : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Vote') {
        struct {
            Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
            Height : ('' 'int64') int64
            Round : ('' 'int') int
            BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                    Total : ('' 'int') int
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                } //struct
            } //struct
            Timestamp : ('time' 'Time') 
            ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            ValidatorIndex : ('' 'int') int
            Signature : ('' '') ByteSlice
        } //struct
    } // pointer
} //struct
======= privval.SignedVoteResponse 'github.com/tendermint/tendermint/privval' 'SignedVoteResponse' == 
struct {
    Vote : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Vote') {
        struct {
            Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
            Height : ('' 'int64') int64
            Round : ('' 'int') int
            BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                    Total : ('' 'int') int
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                } //struct
            } //struct
            Timestamp : ('time' 'Time') 
            ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            ValidatorIndex : ('' 'int') int
            Signature : ('' '') ByteSlice
        } //struct
    } // pointer
    Error : ('' '') pointer ('github.com/tendermint/tendermint/privval' 'RemoteSignerError') {
        struct {
            Code : ('' 'int') int
            Description : ('' 'string') string
        } //struct
    } // pointer
} //struct
======= privval.SignProposalRequest 'github.com/tendermint/tendermint/privval' 'SignProposalRequest' == 
struct {
    Proposal : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Proposal') {
        struct {
            Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
            Height : ('' 'int64') int64
            Round : ('' 'int') int
            POLRound : ('' 'int') int
            BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                    Total : ('' 'int') int
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                } //struct
            } //struct
            Timestamp : ('time' 'Time') 
            Signature : ('' '') ByteSlice
        } //struct
    } // pointer
} //struct
======= privval.SignedProposalResponse 'github.com/tendermint/tendermint/privval' 'SignedProposalResponse' == 
struct {
    Proposal : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Proposal') {
        struct {
            Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
            Height : ('' 'int64') int64
            Round : ('' 'int') int
            POLRound : ('' 'int') int
            BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                    Total : ('' 'int') int
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                } //struct
            } //struct
            Timestamp : ('time' 'Time') 
            Signature : ('' '') ByteSlice
        } //struct
    } // pointer
    Error : ('' '') pointer ('github.com/tendermint/tendermint/privval' 'RemoteSignerError') {
        struct {
            Code : ('' 'int') int
            Description : ('' 'string') string
        } //struct
    } // pointer
} //struct
======= privval.PingRequest 'github.com/tendermint/tendermint/privval' 'PingRequest' == 
struct {
} //struct
======= privval.PingResponse 'github.com/tendermint/tendermint/privval' 'PingResponse' == 
struct {
} //struct
======= conn.PacketPing 'github.com/tendermint/tendermint/p2p/conn' 'PacketPing' == 
struct {
} //struct
======= conn.PacketPong 'github.com/tendermint/tendermint/p2p/conn' 'PacketPong' == 
struct {
} //struct
======= conn.PacketMsg 'github.com/tendermint/tendermint/p2p/conn' 'PacketMsg' == 
struct {
    ChannelID : ('' 'uint8') uint8
    EOF : ('' 'uint8') uint8
    Bytes : ('' '') ByteSlice
} //struct
======= mempool.TxMessage 'github.com/tendermint/tendermint/mempool' 'TxMessage' == 
struct {
    Tx : ('github.com/tendermint/tendermint/types' 'Tx') ByteSlice
} //struct
======= v1.bcBlockRequestMessage 'github.com/tendermint/tendermint/blockchain/v1' 'bcBlockRequestMessage' == 
struct {
    Height : ('' 'int64') int64
} //struct
======= v1.bcBlockResponseMessage 'github.com/tendermint/tendermint/blockchain/v1' 'bcBlockResponseMessage' == 
struct {
    Block : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Block') {
        struct_with_private {
            mtx : ('sync' 'Mutex') struct_with_private {
                state : ('' 'int32') int32
                sema : ('' 'uint32') uint32
            } //struct
            Header : ('github.com/tendermint/tendermint/types' 'Header') struct {
                Version : ('github.com/tendermint/tendermint/version' 'Consensus') struct {
                    Block : ('github.com/tendermint/tendermint/version' 'Protocol') uint64
                    App : ('github.com/tendermint/tendermint/version' 'Protocol') uint64
                } //struct
                ChainID : ('' 'string') string
                Height : ('' 'int64') int64
                Time : ('time' 'Time') 
                NumTxs : ('' 'int64') int64
                TotalTxs : ('' 'int64') int64
                LastBlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                    PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                        Total : ('' 'int') int
                        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                    } //struct
                } //struct
                LastCommitHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                DataHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                ValidatorsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                NextValidatorsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                ConsensusHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                AppHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                LastResultsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                EvidenceHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                ProposerAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            } //struct
            Data : ('github.com/tendermint/tendermint/types' 'Data') struct_with_private {
                Txs : ('github.com/tendermint/tendermint/types' 'Txs') slice {
                    ByteSlice
                } //slice
                hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            } //struct
            Evidence : ('github.com/tendermint/tendermint/types' 'EvidenceData') struct_with_private {
                Evidence : ('github.com/tendermint/tendermint/types' 'EvidenceList') slice {
                    interface (github.com/tendermint/tendermint/types Evidence)!
                } //slice
                hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            } //struct
            LastCommit : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Commit') {
                struct_with_private {
                    BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                        PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                            Total : ('' 'int') int
                            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                        } //struct
                    } //struct
                    Precommits : ('' '') slice {
                        pointer ('github.com/tendermint/tendermint/types' 'CommitSig') {
                            struct {
                                Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
                                Height : ('' 'int64') int64
                                Round : ('' 'int') int
                                BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                                    PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                                        Total : ('' 'int') int
                                        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                                    } //struct
                                } //struct
                                Timestamp : ('time' 'Time') 
                                ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                                ValidatorIndex : ('' 'int') int
                                Signature : ('' '') ByteSlice
                            } //struct
                        } // pointer
                    } //slice
                    height : ('' 'int64') int64
                    round : ('' 'int') int
                    hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                    bitArray : ('' '') pointer ('github.com/tendermint/tendermint/libs/common' 'BitArray') {
                        struct_with_private {
                            mtx : ('sync' 'Mutex') struct_with_private {
                                state : ('' 'int32') int32
                                sema : ('' 'uint32') uint32
                            } //struct
                            Bits : ('' 'int') int
                            Elems : ('' '') slice {
                                uint64
                            } //slice
                        } //struct
                    } // pointer
                } //struct
            } // pointer
        } //struct
    } // pointer
} //struct
======= v1.bcNoBlockResponseMessage 'github.com/tendermint/tendermint/blockchain/v1' 'bcNoBlockResponseMessage' == 
struct {
    Height : ('' 'int64') int64
} //struct
======= v1.bcStatusResponseMessage 'github.com/tendermint/tendermint/blockchain/v1' 'bcStatusResponseMessage' == 
struct {
    Height : ('' 'int64') int64
} //struct
======= v1.bcStatusRequestMessage 'github.com/tendermint/tendermint/blockchain/v1' 'bcStatusRequestMessage' == 
struct {
    Height : ('' 'int64') int64
} //struct
======= v0.bcBlockRequestMessage 'github.com/tendermint/tendermint/blockchain/v0' 'bcBlockRequestMessage' == 
struct {
    Height : ('' 'int64') int64
} //struct
======= v0.bcBlockResponseMessage 'github.com/tendermint/tendermint/blockchain/v0' 'bcBlockResponseMessage' == 
struct {
    Block : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Block') {
        struct_with_private {
            mtx : ('sync' 'Mutex') struct_with_private {
                state : ('' 'int32') int32
                sema : ('' 'uint32') uint32
            } //struct
            Header : ('github.com/tendermint/tendermint/types' 'Header') struct {
                Version : ('github.com/tendermint/tendermint/version' 'Consensus') struct {
                    Block : ('github.com/tendermint/tendermint/version' 'Protocol') uint64
                    App : ('github.com/tendermint/tendermint/version' 'Protocol') uint64
                } //struct
                ChainID : ('' 'string') string
                Height : ('' 'int64') int64
                Time : ('time' 'Time') 
                NumTxs : ('' 'int64') int64
                TotalTxs : ('' 'int64') int64
                LastBlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                    PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                        Total : ('' 'int') int
                        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                    } //struct
                } //struct
                LastCommitHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                DataHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                ValidatorsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                NextValidatorsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                ConsensusHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                AppHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                LastResultsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                EvidenceHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                ProposerAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            } //struct
            Data : ('github.com/tendermint/tendermint/types' 'Data') struct_with_private {
                Txs : ('github.com/tendermint/tendermint/types' 'Txs') slice {
                    ByteSlice
                } //slice
                hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            } //struct
            Evidence : ('github.com/tendermint/tendermint/types' 'EvidenceData') struct_with_private {
                Evidence : ('github.com/tendermint/tendermint/types' 'EvidenceList') slice {
                    interface (github.com/tendermint/tendermint/types Evidence)!
                } //slice
                hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            } //struct
            LastCommit : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Commit') {
                struct_with_private {
                    BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                        PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                            Total : ('' 'int') int
                            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                        } //struct
                    } //struct
                    Precommits : ('' '') slice {
                        pointer ('github.com/tendermint/tendermint/types' 'CommitSig') {
                            struct {
                                Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
                                Height : ('' 'int64') int64
                                Round : ('' 'int') int
                                BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                                    PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                                        Total : ('' 'int') int
                                        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                                    } //struct
                                } //struct
                                Timestamp : ('time' 'Time') 
                                ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                                ValidatorIndex : ('' 'int') int
                                Signature : ('' '') ByteSlice
                            } //struct
                        } // pointer
                    } //slice
                    height : ('' 'int64') int64
                    round : ('' 'int') int
                    hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                    bitArray : ('' '') pointer ('github.com/tendermint/tendermint/libs/common' 'BitArray') {
                        struct_with_private {
                            mtx : ('sync' 'Mutex') struct_with_private {
                                state : ('' 'int32') int32
                                sema : ('' 'uint32') uint32
                            } //struct
                            Bits : ('' 'int') int
                            Elems : ('' '') slice {
                                uint64
                            } //slice
                        } //struct
                    } // pointer
                } //struct
            } // pointer
        } //struct
    } // pointer
} //struct
======= v0.bcNoBlockResponseMessage 'github.com/tendermint/tendermint/blockchain/v0' 'bcNoBlockResponseMessage' == 
struct {
    Height : ('' 'int64') int64
} //struct
======= v0.bcStatusResponseMessage 'github.com/tendermint/tendermint/blockchain/v0' 'bcStatusResponseMessage' == 
struct {
    Height : ('' 'int64') int64
} //struct
======= v0.bcStatusRequestMessage 'github.com/tendermint/tendermint/blockchain/v0' 'bcStatusRequestMessage' == 
struct {
    Height : ('' 'int64') int64
} //struct
======= pex.pexRequestMessage 'github.com/tendermint/tendermint/p2p/pex' 'pexRequestMessage' == 
struct {
} //struct
======= pex.pexAddrsMessage 'github.com/tendermint/tendermint/p2p/pex' 'pexAddrsMessage' == 
struct {
    Addrs : ('' '') slice {
        pointer ('github.com/tendermint/tendermint/p2p' 'NetAddress') {
            struct_with_private {
                ID : ('github.com/tendermint/tendermint/p2p' 'ID') string
                IP : ('net' 'IP') ByteSlice
                Port : ('' 'uint16') uint16
                str : ('' 'string') string
            } //struct
        } // pointer
    } //slice
} //struct
======= consensus.msgInfo 'github.com/tendermint/tendermint/consensus' 'msgInfo' == 
struct {
    Msg : ('github.com/tendermint/tendermint/consensus' 'ConsensusMessage') interface (github.com/tendermint/tendermint/consensus ConsensusMessage)!
    PeerID : ('github.com/tendermint/tendermint/p2p' 'ID') string
} //struct
======= consensus.timeoutInfo 'github.com/tendermint/tendermint/consensus' 'timeoutInfo' == 
struct {
    Duration : ('time' 'Duration') int64
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    Step : ('github.com/tendermint/tendermint/consensus/types' 'RoundStepType') uint8
} //struct
======= common.BitArray 'github.com/tendermint/tendermint/libs/common' 'BitArray' == 
struct_with_private {
    mtx : ('sync' 'Mutex') struct_with_private {
        state : ('' 'int32') int32
        sema : ('' 'uint32') uint32
    } //struct
    Bits : ('' 'int') int
    Elems : ('' '') slice {
        uint64
    } //slice
} //struct
======= types.Proposal 'github.com/tendermint/tendermint/types' 'Proposal' == 
struct {
    Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    POLRound : ('' 'int') int
    BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
            Total : ('' 'int') int
            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        } //struct
    } //struct
    Timestamp : ('time' 'Time') 
    Signature : ('' '') ByteSlice
} //struct
======= types.Part 'github.com/tendermint/tendermint/types' 'Part' == 
struct {
    Index : ('' 'int') int
    Bytes : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
    Proof : ('github.com/tendermint/tendermint/crypto/merkle' 'SimpleProof') struct {
        Total : ('' 'int') int
        Index : ('' 'int') int
        LeafHash : ('' '') ByteSlice
        Aunts : ('' '') slice {
            ByteSlice
        } //slice
    } //struct
} //struct
======= types.Block 'github.com/tendermint/tendermint/types' 'Block' == 
struct_with_private {
    mtx : ('sync' 'Mutex') struct_with_private {
        state : ('' 'int32') int32
        sema : ('' 'uint32') uint32
    } //struct
    Header : ('github.com/tendermint/tendermint/types' 'Header') struct {
        Version : ('github.com/tendermint/tendermint/version' 'Consensus') struct {
            Block : ('github.com/tendermint/tendermint/version' 'Protocol') uint64
            App : ('github.com/tendermint/tendermint/version' 'Protocol') uint64
        } //struct
        ChainID : ('' 'string') string
        Height : ('' 'int64') int64
        Time : ('time' 'Time') 
        NumTxs : ('' 'int64') int64
        TotalTxs : ('' 'int64') int64
        LastBlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                Total : ('' 'int') int
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            } //struct
        } //struct
        LastCommitHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        DataHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        ValidatorsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        NextValidatorsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        ConsensusHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        AppHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        LastResultsHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        EvidenceHash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        ProposerAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
    } //struct
    Data : ('github.com/tendermint/tendermint/types' 'Data') struct_with_private {
        Txs : ('github.com/tendermint/tendermint/types' 'Txs') slice {
            ByteSlice
        } //slice
        hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
    } //struct
    Evidence : ('github.com/tendermint/tendermint/types' 'EvidenceData') struct_with_private {
        Evidence : ('github.com/tendermint/tendermint/types' 'EvidenceList') slice {
            interface (github.com/tendermint/tendermint/types Evidence)!
        } //slice
        hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
    } //struct
    LastCommit : ('' '') pointer ('github.com/tendermint/tendermint/types' 'Commit') {
        struct_with_private {
            BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                    Total : ('' 'int') int
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                } //struct
            } //struct
            Precommits : ('' '') slice {
                pointer ('github.com/tendermint/tendermint/types' 'CommitSig') {
                    struct {
                        Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
                        Height : ('' 'int64') int64
                        Round : ('' 'int') int
                        BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                            PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                                Total : ('' 'int') int
                                Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                            } //struct
                        } //struct
                        Timestamp : ('time' 'Time') 
                        ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                        ValidatorIndex : ('' 'int') int
                        Signature : ('' '') ByteSlice
                    } //struct
                } // pointer
            } //slice
            height : ('' 'int64') int64
            round : ('' 'int') int
            hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
            bitArray : ('' '') pointer ('github.com/tendermint/tendermint/libs/common' 'BitArray') {
                struct_with_private {
                    mtx : ('sync' 'Mutex') struct_with_private {
                        state : ('' 'int32') int32
                        sema : ('' 'uint32') uint32
                    } //struct
                    Bits : ('' 'int') int
                    Elems : ('' '') slice {
                        uint64
                    } //slice
                } //struct
            } // pointer
        } //struct
    } // pointer
} //struct
======= types.Tx 'github.com/tendermint/tendermint/types' 'Tx' == 
ByteSlice
======= types.Commit 'github.com/tendermint/tendermint/types' 'Commit' == 
struct_with_private {
    BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
            Total : ('' 'int') int
            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        } //struct
    } //struct
    Precommits : ('' '') slice {
        pointer ('github.com/tendermint/tendermint/types' 'CommitSig') {
            struct {
                Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
                Height : ('' 'int64') int64
                Round : ('' 'int') int
                BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
                    Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                    PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
                        Total : ('' 'int') int
                        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                    } //struct
                } //struct
                Timestamp : ('time' 'Time') 
                ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
                ValidatorIndex : ('' 'int') int
                Signature : ('' '') ByteSlice
            } //struct
        } // pointer
    } //slice
    height : ('' 'int64') int64
    round : ('' 'int') int
    hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
    bitArray : ('' '') pointer ('github.com/tendermint/tendermint/libs/common' 'BitArray') {
        struct_with_private {
            mtx : ('sync' 'Mutex') struct_with_private {
                state : ('' 'int32') int32
                sema : ('' 'uint32') uint32
            } //struct
            Bits : ('' 'int') int
            Elems : ('' '') slice {
                uint64
            } //slice
        } //struct
    } // pointer
} //struct
======= types.CommitSig 'github.com/tendermint/tendermint/types' 'CommitSig' == 
struct {
    Type : ('github.com/tendermint/tendermint/types' 'SignedMsgType') uint8
    Height : ('' 'int64') int64
    Round : ('' 'int') int
    BlockID : ('github.com/tendermint/tendermint/types' 'BlockID') struct {
        Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        PartsHeader : ('github.com/tendermint/tendermint/types' 'PartSetHeader') struct {
            Total : ('' 'int') int
            Hash : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
        } //struct
    } //struct
    Timestamp : ('time' 'Time') 
    ValidatorAddress : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
    ValidatorIndex : ('' 'int') int
    Signature : ('' '') ByteSlice
} //struct
======= types.Validator 'github.com/tendermint/tendermint/types' 'Validator' == 
struct {
    Address : ('github.com/tendermint/tendermint/libs/common' 'HexBytes') ByteSlice
    PubKey : ('github.com/tendermint/tendermint/crypto' 'PubKey') interface (github.com/tendermint/tendermint/crypto PubKey)!
    VotingPower : ('' 'int64') int64
    ProposerPriority : ('' 'int64') int64
} //struct
======= types.Event 'github.com/tendermint/tendermint/abci/types' 'Event' == 
struct {
    Type : ('' 'string') string
    Attributes : ('' '') slice {
        struct {
            Key : ('' '') ByteSlice
            Value : ('' '') ByteSlice
            XXX_NoUnkeyedLiteral : ('' '') struct {
            } //struct
            XXX_unrecognized : ('' '') ByteSlice
            XXX_sizecache : ('' 'int32') int32
        } //struct
    } //slice
    XXX_NoUnkeyedLiteral : ('' '') struct {
    } //struct
    XXX_unrecognized : ('' '') ByteSlice
    XXX_sizecache : ('' 'int32') int32
} //struct
======= types.ValidatorUpdate 'github.com/tendermint/tendermint/abci/types' 'ValidatorUpdate' == 
struct {
    PubKey : ('github.com/tendermint/tendermint/abci/types' 'PubKey') struct {
        Type : ('' 'string') string
        Data : ('' '') ByteSlice
        XXX_NoUnkeyedLiteral : ('' '') struct {
        } //struct
        XXX_unrecognized : ('' '') ByteSlice
        XXX_sizecache : ('' 'int32') int32
    } //struct
    Power : ('' 'int64') int64
    XXX_NoUnkeyedLiteral : ('' '') struct {
    } //struct
    XXX_unrecognized : ('' '') ByteSlice
    XXX_sizecache : ('' 'int32') int32
} //struct
======= types.ConsensusParams 'github.com/tendermint/tendermint/abci/types' 'ConsensusParams' == 
struct {
    Block : ('' '') pointer ('github.com/tendermint/tendermint/abci/types' 'BlockParams') {
        struct {
            MaxBytes : ('' 'int64') int64
            MaxGas : ('' 'int64') int64
            XXX_NoUnkeyedLiteral : ('' '') struct {
            } //struct
            XXX_unrecognized : ('' '') ByteSlice
            XXX_sizecache : ('' 'int32') int32
        } //struct
    } // pointer
    Evidence : ('' '') pointer ('github.com/tendermint/tendermint/abci/types' 'EvidenceParams') {
        struct {
            MaxAge : ('' 'int64') int64
            XXX_NoUnkeyedLiteral : ('' '') struct {
            } //struct
            XXX_unrecognized : ('' '') ByteSlice
            XXX_sizecache : ('' 'int32') int32
        } //struct
    } // pointer
    Validator : ('' '') pointer ('github.com/tendermint/tendermint/abci/types' 'ValidatorParams') {
        struct {
            PubKeyTypes : ('' '') slice {
                string
            } //slice
            XXX_NoUnkeyedLiteral : ('' '') struct {
            } //struct
            XXX_unrecognized : ('' '') ByteSlice
            XXX_sizecache : ('' 'int32') int32
        } //struct
    } // pointer
    XXX_NoUnkeyedLiteral : ('' '') struct {
    } //struct
    XXX_unrecognized : ('' '') ByteSlice
    XXX_sizecache : ('' 'int32') int32
} //struct
======= types.BlockParams 'github.com/tendermint/tendermint/abci/types' 'BlockParams' == 
struct {
    MaxBytes : ('' 'int64') int64
    MaxGas : ('' 'int64') int64
    XXX_NoUnkeyedLiteral : ('' '') struct {
    } //struct
    XXX_unrecognized : ('' '') ByteSlice
    XXX_sizecache : ('' 'int32') int32
} //struct
======= types.EvidenceParams 'github.com/tendermint/tendermint/abci/types' 'EvidenceParams' == 
struct {
    MaxAge : ('' 'int64') int64
    XXX_NoUnkeyedLiteral : ('' '') struct {
    } //struct
    XXX_unrecognized : ('' '') ByteSlice
    XXX_sizecache : ('' 'int32') int32
} //struct
======= types.ValidatorParams 'github.com/tendermint/tendermint/abci/types' 'ValidatorParams' == 
struct {
    PubKeyTypes : ('' '') slice {
        string
    } //slice
    XXX_NoUnkeyedLiteral : ('' '') struct {
    } //struct
    XXX_unrecognized : ('' '') ByteSlice
    XXX_sizecache : ('' 'int32') int32
} //struct
======= privval.RemoteSignerError 'github.com/tendermint/tendermint/privval' 'RemoteSignerError' == 
struct {
    Code : ('' 'int') int
    Description : ('' 'string') string
} //struct
======= p2p.NetAddress 'github.com/tendermint/tendermint/p2p' 'NetAddress' == 
struct_with_private {
    ID : ('github.com/tendermint/tendermint/p2p' 'ID') string
    IP : ('net' 'IP') ByteSlice
    Port : ('' 'uint16') uint16
    str : ('' 'string') string
} //struct
======= common.KVPair 'github.com/tendermint/tendermint/libs/common' 'KVPair' == 
struct {
    Key : ('' '') ByteSlice
    Value : ('' '') ByteSlice
    XXX_NoUnkeyedLiteral : ('' '') struct {
    } //struct
    XXX_unrecognized : ('' '') ByteSlice
    XXX_sizecache : ('' 'int32') int32
} //struct
======= p2p.ID 'github.com/tendermint/tendermint/p2p' 'ID' == 
string
======= time.Duration 'time' 'Duration' == 
int64
======= types.RoundStepType 'github.com/tendermint/tendermint/consensus/types' 'RoundStepType' == 
uint8
======= version.Protocol 'github.com/tendermint/tendermint/version' 'Protocol' == 
uint64
